// Calendar functionality for WCSC Brotherhood\n\nclass Calendar {\n    constructor() {\n        this.currentDate = new Date();\n        this.events = this.loadEvents();\n        this.init();\n    }\n\n    init() {\n        this.generateCalendar();\n        this.setupEventListeners();\n        this.checkPermissions();\n    }\n\n    setupEventListeners() {\n        const eventForm = document.getElementById('event-form');\n        if (eventForm) {\n            eventForm.addEventListener('submit', (e) => this.addEvent(e));\n        }\n\n        // Close modal when clicking outside\n        document.getElementById('event-modal').addEventListener('click', (e) => {\n            if (e.target.id === 'event-modal') {\n                this.hideEventModal();\n            }\n        });\n    }\n\n    checkPermissions() {\n        // Show add event button only for leaders\n        const addBtn = document.getElementById('add-event-btn');\n        if (window.auth && window.auth.isLeader()) {\n            addBtn.classList.add('show');\n        }\n    }\n\n    generateCalendar() {\n        const year = this.currentDate.getFullYear();\n        const month = this.currentDate.getMonth();\n        \n        // Update month display\n        const monthNames = [\n            'January', 'February', 'March', 'April', 'May', 'June',\n            'July', 'August', 'September', 'October', 'November', 'December'\n        ];\n        document.getElementById('current-month').textContent = `${monthNames[month]} ${year}`;\n\n        // Clear calendar\n        const calendarGrid = document.getElementById('calendar-grid');\n        calendarGrid.innerHTML = '';\n\n        // Add day headers\n        const dayHeaders = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n        dayHeaders.forEach(day => {\n            const dayHeader = document.createElement('div');\n            dayHeader.className = 'calendar-day-header';\n            dayHeader.textContent = day;\n            calendarGrid.appendChild(dayHeader);\n        });\n\n        // Get first day of month and number of days\n        const firstDay = new Date(year, month, 1);\n        const lastDay = new Date(year, month + 1, 0);\n        const firstDayWeekday = firstDay.getDay();\n        const daysInMonth = lastDay.getDate();\n\n        // Add empty cells for days before month starts\n        for (let i = 0; i < firstDayWeekday; i++) {\n            const emptyDay = document.createElement('div');\n            emptyDay.className = 'calendar-day other-month';\n            calendarGrid.appendChild(emptyDay);\n        }\n\n        // Add days of month\n        for (let day = 1; day <= daysInMonth; day++) {\n            const dayElement = document.createElement('div');\n            dayElement.className = 'calendar-day';\n            \n            const dayNumber = document.createElement('div');\n            dayNumber.className = 'day-number';\n            dayNumber.textContent = day;\n            dayElement.appendChild(dayNumber);\n\n            // Check if this is today\n            const today = new Date();\n            if (year === today.getFullYear() && month === today.getMonth() && day === today.getDate()) {\n                dayElement.classList.add('today');\n            }\n\n            // Add events for this day\n            const dayEvents = this.getEventsForDay(year, month, day);\n            if (dayEvents.length > 0) {\n                dayElement.classList.add('has-event');\n                dayEvents.forEach(event => {\n                    const eventElement = document.createElement('div');\n                    eventElement.className = `calendar-event ${event.type}`;\n                    eventElement.textContent = event.title;\n                    eventElement.onclick = () => this.showEventDetails(event);\n                    dayElement.appendChild(eventElement);\n                });\n            }\n\n            // Click to add event (leaders only)\n            dayElement.onclick = (e) => {\n                if (e.target === dayElement && window.auth && window.auth.isLeader()) {\n                    this.showAddEventModal(year, month, day);\n                }\n            };\n\n            calendarGrid.appendChild(dayElement);\n        }\n    }\n\n    getEventsForDay(year, month, day) {\n        const dateStr = `${year}-${String(month + 1).padStart(2, '0')}-${String(day).padStart(2, '0')}`;\n        return this.events.filter(event => event.date === dateStr);\n    }\n\n    loadEvents() {\n        // Load from localStorage or return default events\n        const stored = localStorage.getItem('wcsc-events');\n        if (stored) {\n            return JSON.parse(stored);\n        }\n\n        // Default sample events\n        return [\n            {\n                id: 1,\n                title: 'Weekly Meeting',\n                date: '2025-01-03',\n                time: '18:30',\n                type: 'meeting',\n                description: 'Regular brotherhood gathering - Georgetown Chapter',\n                notes: 'Discussed community service opportunities and upcoming range day. Strong attendance with good fellowship.'\n            },\n            {\n                id: 2,\n                title: 'Range Day',\n                date: '2025-01-11',\n                time: '09:00',\n                type: 'social',\n                description: 'Monthly shooting training and fellowship'\n            },\n            {\n                id: 3,\n                title: 'Community Service',\n                date: '2025-01-18',\n                time: '08:00',\n                type: 'service',\n                description: 'Park cleanup at Veterans Memorial Park'\n            }\n        ];\n    }\n\n    saveEvents() {\n        localStorage.setItem('wcsc-events', JSON.stringify(this.events));\n    }\n\n    addEvent(e) {\n        e.preventDefault();\n        \n        const form = e.target;\n        const newEvent = {\n            id: Date.now(),\n            title: form.querySelector('#event-title').value,\n            date: form.querySelector('#event-date').value,\n            time: form.querySelector('#event-time').value,\n            type: form.querySelector('#event-type').value,\n            description: form.querySelector('#event-description').value\n        };\n\n        this.events.push(newEvent);\n        this.saveEvents();\n        this.generateCalendar();\n        this.hideEventModal();\n        form.reset();\n    }\n\n    showAddEventModal(year, month, day) {\n        const modal = document.getElementById('event-modal');\n        const dateInput = document.getElementById('event-date');\n        const dateStr = `${year}-${String(month + 1).padStart(2, '0')}-${String(day).padStart(2, '0')}`;\n        dateInput.value = dateStr;\n        modal.classList.add('active');\n    }\n\n    showEventDetails(event) {\n        if (event.notes) {\n            // If event has notes (past meeting), redirect to archives\n            window.location.href = `archives.html?event=${event.id}`;\n        } else {\n            // Show event details modal\n            alert(`${event.title}\\n${event.date} at ${event.time}\\n\\n${event.description}`);\n        }\n    }\n\n    hideEventModal() {\n        document.getElementById('event-modal').classList.remove('active');\n    }\n\n    previousMonth() {\n        this.currentDate.setMonth(this.currentDate.getMonth() - 1);\n        this.generateCalendar();\n    }\n\n    nextMonth() {\n        this.currentDate.setMonth(this.currentDate.getMonth() + 1);\n        this.generateCalendar();\n    }\n\n    showToday() {\n        this.currentDate = new Date();\n        this.generateCalendar();\n    }\n}\n\n// Global functions for HTML onclick handlers\nfunction previousMonth() {\n    window.calendar.previousMonth();\n}\n\nfunction nextMonth() {\n    window.calendar.nextMonth();\n}\n\nfunction showToday() {\n    window.calendar.showToday();\n}\n\nfunction showAddEvent() {\n    window.calendar.showAddEventModal(\n        new Date().getFullYear(),\n        new Date().getMonth(),\n        new Date().getDate()\n    );\n}\n\nfunction hideEventModal() {\n    window.calendar.hideEventModal();\n}\n\n// Initialize calendar when page loads\ndocument.addEventListener('DOMContentLoaded', function() {\n    window.calendar = new Calendar();\n});