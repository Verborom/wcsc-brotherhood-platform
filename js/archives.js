// Archives functionality for WCSC Brotherhood

class Archives {\n    constructor() {\n        this.archives = this.loadArchives();\n        this.init();\n    }\n\n    init() {\n        this.checkAccess();\n        this.setupEventListeners();\n        this.loadArchives();\n    }\n\n    checkAccess() {\n        const loginRequired = document.getElementById('login-required');\n        const archivesContent = document.getElementById('archives-content');\n        \n        if (window.auth && window.auth.isAuthenticated()) {\n            loginRequired.style.display = 'none';\n            archivesContent.style.display = 'block';\n            this.displayArchives();\n        } else {\n            loginRequired.style.display = 'block';\n            archivesContent.style.display = 'none';\n        }\n    }\n\n    setupEventListeners() {\n        const searchInput = document.getElementById('search-input');\n        if (searchInput) {\n            searchInput.addEventListener('input', (e) => this.filterArchives(e.target.value));\n        }\n\n        // Check for specific event parameter\n        const urlParams = new URLSearchParams(window.location.search);\n        const eventId = urlParams.get('event');\n        if (eventId) {\n            this.showEventArchive(eventId);\n        }\n    }\n\n    loadArchives() {\n        // Sample meeting archives with detailed notes\n        return [\n            {\n                id: 1,\n                date: '2025-01-03',\n                title: 'Weekly Brotherhood Meeting - Georgetown Chapter',\n                type: 'meeting',\n                attendance: 12,\n                themes: ['Brotherhood Unity', 'Community Service', 'Spiritual Growth'],\n                summary: 'Strong fellowship with focus on upcoming service projects. Discussion on accountability partnerships and scripture study habits.',\n                notes: {\n                    opening: 'Opened with prayer for unity and wisdom. Scripture reading from Proverbs 27:17.',\n                    announcements: 'Range day scheduled for January 11th. Community service project at Veterans Memorial Park on January 18th.',\n                    selfImprovement: 'Members shared challenges with consistency in prayer and physical fitness goals. Discussion on accountability partnerships.',\n                    breakouts: 'Small groups focused on practical ways to support each other in daily spiritual disciplines.',\n                    communityAction: 'Planned park cleanup with local veterans group. Discussed 2nd Amendment education seminar for spring.',\n                    prayerRequests: 'Employment situation for brother James. Healing for brother Mike\\'s father. Wisdom in family decisions for brother David.',\n                    keyInsights: [\n                        'Accountability partnerships increase success in spiritual disciplines',\n                        'Community service builds stronger bonds within brotherhood',\n                        'Regular prayer for each other strengthens clan unity'\n                    ]\n                },\n                aiGenerated: {\n                    spiritualThemes: ['Accountability', 'Mutual Support', 'Faithful Service'],\n                    scriptureRecommendations: ['Galatians 6:2', 'Ecclesiastes 4:12', '1 Thessalonians 5:11'],\n                    followUpActions: [\n                        'Pair members for accountability partnerships',\n                        'Schedule service project planning meeting',\n                        'Create prayer chain for ongoing requests'\n                    ]\n                }\n            },\n            {\n                id: 2,\n                date: '2024-12-20',\n                title: 'Year-End Brotherhood Gathering',\n                type: 'meeting',\n                attendance: 15,\n                themes: ['Gratitude', 'Vision 2025', 'Sanctuary Initiative'],\n                summary: 'Reflective meeting on year\\'s growth and vision casting for 2025. Sanctuary Initiative planning discussion.',\n                notes: {\n                    opening: 'Thanksgiving prayer for brotherhood growth. Scripture from Psalm 133 on unity.',\n                    announcements: 'Holiday break schedule. January kickoff meeting planned.',\n                    selfImprovement: 'Year-end reflection on personal growth. Members shared victories and lessons learned.',\n                    breakouts: 'Vision discussion for 2025 goals and Sanctuary Initiative input.',\n                    communityAction: 'Review of community impact in 2024. Planning expanded outreach for 2025.',\n                    prayerRequests: 'Safe travels during holidays. Wisdom for major life decisions in coming year.',\n                    keyInsights: [\n                        'Brotherhood has grown stronger through consistent meeting attendance',\n                        'Members desire more hands-on service opportunities',\n                        'Sanctuary Initiative has strong support and enthusiasm'\n                    ]\n                },\n                aiGenerated: {\n                    spiritualThemes: ['Thankfulness', 'Vision', 'Unity'],\n                    scriptureRecommendations: ['Jeremiah 29:11', 'Psalm 133:1', 'Philippians 4:6-7'],\n                    followUpActions: [\n                        'Develop 2025 brotherhood goals',\n                        'Create Sanctuary Initiative timeline',\n                        'Plan expanded community outreach'\n                    ]\n                }\n            },\n            {\n                id: 3,\n                date: '2024-12-06',\n                title: 'Brotherhood Meeting - Focus on Preparedness',\n                type: 'meeting',\n                attendance: 10,\n                themes: ['Preparedness', 'Self-Reliance', 'Community Defense'],\n                summary: 'Discussion on practical preparedness skills and community resilience. Emergency response planning.',\n                notes: {\n                    opening: 'Prayer for wisdom in uncertain times. Scripture from Luke 14:31 on counting the cost.',\n                    announcements: 'Emergency preparedness workshop scheduled. First aid certification available.',\n                    selfImprovement: 'Members discussed home security, food storage, and financial preparedness.',\n                    breakouts: 'Skills sharing on practical preparedness: water filtration, basic medical, communications.',\n                    communityAction: 'Discussed forming neighborhood watch groups and emergency response teams.',\n                    prayerRequests: 'Wisdom in preparedness decisions. Protection for families. Economic stability.',\n                    keyInsights: [\n                        'Preparedness is stewardship, not fear-based',\n                        'Skills sharing multiplies everyone\\'s capabilities',\n                        'Community preparedness strengthens neighborhoods'\n                    ]\n                },\n                aiGenerated: {\n                    spiritualThemes: ['Stewardship', 'Wisdom', 'Protection'],\n                    scriptureRecommendations: ['Proverbs 21:20', 'Luke 14:31', 'Nehemiah 4:13'],\n                    followUpActions: [\n                        'Organize preparedness skills workshop',\n                        'Create resource sharing network',\n                        'Develop emergency communication plan'\n                    ]\n                }\n            }\n        ];\n    }\n\n    displayArchives(filteredArchives = null) {\n        const archiveList = document.getElementById('archive-list');\n        if (!archiveList) return;\n\n        const archives = filteredArchives || this.archives;\n        archiveList.innerHTML = '';\n\n        archives.forEach(archive => {\n            const archiveItem = document.createElement('div');\n            archiveItem.className = 'archive-item';\n            archiveItem.onclick = () => this.toggleArchiveDetail(archive.id);\n            \n            archiveItem.innerHTML = `\n                <div class=\"archive-date\">${new Date(archive.date).toLocaleDateString('en-US', { \n                    weekday: 'long', \n                    year: 'numeric', \n                    month: 'long', \n                    day: 'numeric' \n                })}</div>\n                <div class=\"archive-title\">${archive.title}</div>\n                <div class=\"archive-preview\">${archive.summary}</div>\n                <div class=\"archive-tags\">\n                    <span class=\"tag\">üìä ${archive.attendance} attended</span>\n                    ${archive.themes.map(theme => `<span class=\"tag\">${theme}</span>`).join('')}\n                </div>\n                <div class=\"archive-detail\" id=\"detail-${archive.id}\">\n                    <div class=\"notes-section\">\n                        <h4 style=\"color: var(--gold); margin-bottom: 1rem;\">üìù Meeting Notes</h4>\n                        <div style=\"margin-bottom: 1rem;\">\n                            <strong style=\"color: var(--gold);\">Opening:</strong>\n                            <p style=\"margin: 0.5rem 0; color: var(--text-secondary);\">${archive.notes.opening}</p>\n                        </div>\n                        <div style=\"margin-bottom: 1rem;\">\n                            <strong style=\"color: var(--gold);\">Self-Improvement Discussion:</strong>\n                            <p style=\"margin: 0.5rem 0; color: var(--text-secondary);\">${archive.notes.selfImprovement}</p>\n                        </div>\n                        <div style=\"margin-bottom: 1rem;\">\n                            <strong style=\"color: var(--gold);\">Community Action:</strong>\n                            <p style=\"margin: 0.5rem 0; color: var(--text-secondary);\">${archive.notes.communityAction}</p>\n                        </div>\n                        <div style=\"margin-bottom: 1rem;\">\n                            <strong style=\"color: var(--gold);\">Key Insights:</strong>\n                            <ul style=\"margin: 0.5rem 0; color: var(--text-secondary); padding-left: 1rem;\">\n                                ${archive.notes.keyInsights.map(insight => `<li>${insight}</li>`).join('')}\n                            </ul>\n                        </div>\n                    </div>\n                    \n                    <div class=\"notes-section\">\n                        <h4 style=\"color: var(--gold); margin-bottom: 1rem;\">ü§ñ AI-Generated Insights</h4>\n                        <div style=\"margin-bottom: 1rem;\">\n                            <strong style=\"color: var(--gold);\">Spiritual Themes:</strong>\n                            <p style=\"margin: 0.5rem 0; color: var(--text-secondary);\">${archive.aiGenerated.spiritualThemes.join(', ')}</p>\n                        </div>\n                        <div style=\"margin-bottom: 1rem;\">\n                            <strong style=\"color: var(--gold);\">Scripture Recommendations:</strong>\n                            <p style=\"margin: 0.5rem 0; color: var(--text-secondary);\">${archive.aiGenerated.scriptureRecommendations.join(', ')}</p>\n                        </div>\n                        <div>\n                            <strong style=\"color: var(--gold);\">Follow-up Actions:</strong>\n                            <ul style=\"margin: 0.5rem 0; color: var(--text-secondary); padding-left: 1rem;\">\n                                ${archive.aiGenerated.followUpActions.map(action => `<li>${action}</li>`).join('')}\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            `;\n            \n            archiveList.appendChild(archiveItem);\n        });\n    }\n\n    toggleArchiveDetail(archiveId) {\n        const detail = document.getElementById(`detail-${archiveId}`);\n        const isActive = detail.classList.contains('active');\n        \n        // Close all other details\n        document.querySelectorAll('.archive-detail').forEach(d => {\n            d.classList.remove('active');\n        });\n        \n        // Toggle current detail\n        if (!isActive) {\n            detail.classList.add('active');\n        }\n    }\n\n    showEventArchive(eventId) {\n        // Called when coming from calendar click\n        setTimeout(() => {\n            this.toggleArchiveDetail(eventId);\n            const element = document.getElementById(`detail-${eventId}`);\n            if (element) {\n                element.scrollIntoView({ behavior: 'smooth', block: 'start' });\n            }\n        }, 500);\n    }\n\n    filterArchives(searchTerm) {\n        if (!searchTerm) {\n            this.displayArchives();\n            return;\n        }\n\n        const filtered = this.archives.filter(archive => {\n            const searchLower = searchTerm.toLowerCase();\n            return (\n                archive.title.toLowerCase().includes(searchLower) ||\n                archive.summary.toLowerCase().includes(searchLower) ||\n                archive.themes.some(theme => theme.toLowerCase().includes(searchLower)) ||\n                archive.date.includes(searchTerm)\n            );\n        });\n\n        this.displayArchives(filtered);\n    }\n}\n\n// Initialize archives when page loads\ndocument.addEventListener('DOMContentLoaded', function() {\n    window.archives = new Archives();\n});"